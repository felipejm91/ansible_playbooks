# Este playbook realiza algumas configurações iniciais em servidores que acabaram de ser criados. Ele está funcional para distribuições Linux baseadas em Debian, mas com poucos ajustes é possível utiliza-lo para aplicações baseadas em RedHat.
# As configurações que são realizadas aqui são:
# 1 - Atualização dos repositórios e pacotes
# 2 - Instalação dos programas e utilitários: net-tools, nano, ufw, fail2ban, whois
# 3 - Alterar a configuração padrão do SSH
# 4 - Libera portas do UFW
# 5 - Configuração do Fail2ban
# 6 - Altera senha do usuário padrão e do usuário root
# 7 - Habilita UFW

- name: Configurações iniciais servidor  
  hosts: all # Define quais grupos de hosts serão afetados
  vars_files: # Define os arquivos de variáveis que serão utilizados no pipeline
    - ./ssh_conf/vars_ssh.yaml
    - ./fail2ban_conf/vars_fail2ban.yaml
    - ./user_conf/user_vars.yaml
  gather_facts: false #não registra os facts das tasks
  tasks: # Declaração das tasks
    - name: Atualizando repositórios e programas - APT UPDATE e APT UPGRADE
      ansible.builtin.apt:
        update_cache: true
        upgrade: yes
    - name: Instalar programas - net-tools, nano, ufw, fail2ban, whois
      ansible.builtin.apt:
        update_cache: true
        state: present
        name: 
          - net-tools
          - nano
          - ufw 
          - fail2ban
    - name: Configuração personalizada SSH com template
      ansible.builtin.template:
        src: ./ssh_conf/sshd_conf.j2
        dest: "{{ ssh_file }}"
    - name: Libera porta SSH no UFW 
      community.general.ufw:
        rule: allow
        comment: 'Acesso a porta SSH'
        proto: tcp
        to_port: "{{ ssh_port }}"
    - name: Libera porta 80 HTTP no UFW
      community.general.ufw:
        rule: allow
        comment: 'Acesso HTTP'
        proto: tcp
        to_port: '80'
    - name: Libera porta 443 HTTPS no UFW
      community.general.ufw:
        rule: allow
        comment: 'Acesso HTTPS'
        proto: tcp
        to_port: '443'
    - name: Copia configuração do template para fail2ban
      ansible.builtin.template:
        src: ./fail2ban_conf/jail.local.j2
        dest: "{{ fail2ban_file }}"
    - name: Reinicia serviço fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: restarted
    - name: Gerar a senha criptografada usuário padrão
      register: cripto_pwd_user
      ansible.builtin.shell: 
        cmd: "mkpasswd --method=sha-512 {{ user_pass }}"      
    - name: Atualiza a senha para o usuário padrão
      ansible.builtin.user:
        name: "{{ default_user }}"
        password: "{{ cripto_pwd_user.stdout }}"
    - name: Gerar senha criptografa usuário root
      register: cripto_pwd_root
      ansible.builtin.shell:
        cmd: "mkpasswd --method=sha-512 {{ root_pass }}"
    - name: Atualiza a senha para o usuário root
      ansible.builtin.user:
        name: root
        password: "{{ cripto_pwd_root.stdout }}"
    - name: Habilita UFW
      community.general.ufw:
        state: 'enabled'
    - name: Reinicia o serviço SSH
      ansible.builtin.service:
        name: sshd
        state: restarted
    

   
      

